1 - Validating members

2 - Deciding whether to use the 03 byte for the end of the data

3 - Deciding appropriate _PACKET_SIZE

4 - Adding more data types to the patters
    One way how I see this as achievable is to make the size of the
    data types fixed. Like have int always be 4, str be 128; or so.
    If we also want compability with C we could also only support
    ASCII strings.

5 - Better naming conventions 

6 - Make a pattern class
    This class will validate itself,
    it will automaticaly validate whether data are appropriate for it.

7 - More thorough validity checking
    Things like whether there are just fields name and pattern in the top.
    Just whether the real validity is really valid

8 - Maybe get a better number

9 - Better validated members tracking
    We should also track the patterns that every validated member has
    Every server will have their own internal numbering systems
    A client will ask and the server will respond with its internal numbers
    We will keep track of the patterns and servers supporting them
    Like let's say:
        A server @ 1.1.1.1 #1 has a greenhouse at 3
        A server @ 2.2.2.2 #2 has a greenhouse at 5
        Then we will keep track as such:
            Green house:
                1.1.1.1:3
                2.2.2.2:5
    This may be some sorts of like an "internal port number"
    Or we could just use normal ports
    We'll figure it out along the way 
    